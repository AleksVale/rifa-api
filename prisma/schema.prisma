// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum StatusOptions {
  PENDING
  PAID
  CANCELLED
}

model Ticket {
  id             Int           @id @default(autoincrement())
  name           String
  email          String
  phone          String
  number         Int
  status         StatusOptions
  expirationDate DateTime
  createdAt      DateTime      @default(now())
  updatedAt      DateTime?     @updatedAt
  raffle         Raffle        @relation(fields: [raffleId], references: [id])
  raffleId       Int

  @@map("tickets")
}

model Raffle {
  id          Int         @id @default(autoincrement())
  name        String
  ticketLimit Int
  price       Float
  description String?     @db.Text
  minTickets  Int?
  maxTickets  Int?
  showRanking Boolean?
  drawingDate DateTime?
  timeToPay   String?     @default("1 hora")
  createdAt   DateTime    @default(now())
  updatedAt   DateTime?   @updatedAt
  tickets     Ticket[]
  Prize       Prize[]
  Promotion   Promotion[]
  Winner      Winner?

  @@map("raffles")
}

model Prize {
  id        Int       @id @default(autoincrement())
  name      String
  place     Int
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  raffle    Raffle    @relation(fields: [raffleId], references: [id])
  raffleId  Int

  @@map("prizes")
}

model Promotion {
  id        Int       @id @default(autoincrement())
  quantity  Int
  price     Float
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  raffle    Raffle    @relation(fields: [raffleId], references: [id])
  raffleId  Int

  @@map("promotions")
}

model Winner {
  id        Int       @id @default(autoincrement())
  name      String
  email     String
  phone     String
  number    Int
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  raffle    Raffle    @relation(fields: [raffleId], references: [id])
  raffleId  Int       @unique

  @@map("winners")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  role      Role      @relation(fields: [roleId], references: [id])
  roleId    Int

  @@map("users")
}

enum RoleTypes {
  ADMIN
  USER
}

model Role {
  id        Int       @id @default(autoincrement())
  name      RoleTypes
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  users     User[]
}
